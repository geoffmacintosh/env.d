#+title: Linux

* Install Notes
#+begin_src fish
  loadkeys colemak

  iwctl
  > station wlan0 scan
  > station wlan0 get-networks
  > station wlan0 connect X5-452

  timedatectl set-ntp true

  fdisk # BAD, use gdisk or parted
  # /dev/nvme0n1p1 512M EFI system partition (EF00)
  # /dev/nvme0n1p2 465.5G Linux filesystem (8300)

  mkfs.fat -F32 /dev/nvme0n1p1
  mkfs.btrfs /dev/nvme0n1p2

  mount /dev/nvme0n1p2 /mnt
  btrfs sub create /mnt/@
  btrfs sub create /mnt/@home
  btrfs sub create /mnt/@var
  btrfs sub create /mnt/@snapshots
  umount /mnt

  mount -o
  noatime,nodiratime,compress-force=zstd,space_cache=v2,ssd,subvol=@
  /dev/nvme0n1p2 /mnt
  mkdir /mnt/{boot,home,var,snapshots}
  mount /dev/nvme0n1p1 /mnt/boot
  mount -o ...subvol=@home /dev/nvme0n1p2 /mnt/home
  mount -o ...subvol=@var /dev/nvme0n1p2 /mnt/var
  mount -o ...subvol=@snapshots /dev/nvme0n1p2 /mnt/snapshots

  cd /mnt
  truncate -s 0 ./swapfile
  chattr +C ./swapfile
  btrfs property set ./swapfile compression none
  dd if=/dev/zero of=./swapfile bs=1M count=8000 status=progress
  chmod 600 ./swapfile
  mkswap ./swapfile
  swapon ./swapfile

  # edit /etc/fstab
  # /swapfile none swap defaults 0 0

  pacstrap /mnt base linux linux-firmware mg btrfs-progs amd-ucode iwd networkmanager

  genfstab -U /mnt >> /mnt/etc/fstab

  arch-chroot /mnt

  ln -sf /usr/share/zoneinfo/America/St_Johns /etc/localtime
  hwclock --systohc

  # edit /etc/locale.gen to uncomment en_CA.UTF-8

  locale-gen

  # create /etc/locale.conf to LANG=en_CA.UTF-8
  # create /etc/vconsole.conf be KEYMAP=colemak
  # create /etc/hostname to be d
  # edit /etc/mkinitcpio.conf to contain ...block btrfs keymap
  # filesystems...
  mkinitcpio -P

  passwd

  bootctl --path=/boot install

  # create /boot/loader/entries/arch.conf
  # title Arch Linux
  # linux /vmlinuz-linux
  # initrd /amd-ucode.img
  # initrd /initramfs-linux.img
  # options root=UUID=f3369b3c-4b0b-4fa4-9c94-c2b3e1ee6c85
  # rootflags=subvol=@ rw

  exit
  reboot
#+end_src

#+begin_src shell
  systemctl enable systemd-resolved
  systemctl enable NetworkManager

  nmcli
#+end_src

#+begin_src shell
  systemctl enable systemd-networktimed
  systemctl enable fstrim.timer
#+end_src

#+begin_src shell
  useradd -m -G wheel -s /bin/bash g
  passwd g

  pacman -S sudo
  EDITOR="mg -n" visudo

  # %wheel ALL=(ALL) ALL
  # Defaults passwd_timeout=0

  reboot

  pacman -S xorg-wayland sway alacritty wofi texinfo man-db man-pages

  sudo mg -n /etc/pacman.conf
  # ILoveCandy
  # enable multilib
#+end_src

* Application list
- paru :: AUR helper
- fish :: Default (human) shell
- qmk :: Keyboard configuration
- texlive-most :: LaTeX
- mpv :: Video playback
- anki :: Flashcards
- qbittorrent :: Torrents
- openrgb :: Fancy LED controller
- emacs-pgtk-native-comp-git :: Emacs with GTK and Native Comp
- pulseeffects :: An audio effects package for pipewire (noise reduction!)
- systemdgenie :: SystemD managemnent
- downgrade :: Pacman downgrading tool
- mangohud :: FPS overlay
- element-desktop :: Element
- discord :: Discord
- lyrebird :: voice changer
- obs-studio-wayland :: Stream/recording tool with Wayland support
- reflector :: Pacman mirror updater
- zathura :: PDF viewer
- imv :: Image viewer
- mako :: Notification daemon
- borg :: Backup tool
- amphetype :: Typing trainer
- mg :: Micro text editor (alias mg -n to mg for no backup files)
* Bash

#+begin_src shell :tangle ~/.bash_profile
  export GRIM_DEFAULT_DIR=~/Downloads/
  export MOZ_ENABLE_WAYLAND=1
  if [ "$(tty)" = "/dev/tty1" ]; then
      exec sway
  fi
#+end_src

* Sway
:PROPERTIES:
:header-args: :tangle (if (eq system-type 'gnu/linux) "~/.config/sway/config" "no")
:END:

#+begin_src conf

  set $mod Mod4

  # Home row direction keys, like vim
  set $left h
  set $down j
  set $up k
  set $right l

  set $term kitty

  # on the original workspace that the command was run on.
  set $menu dmenu_path | dmenu | xargs swaymsg exec --

  ### Output configuration
  #
  # Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
  output * bg #525252 solid_color
  #
  # Example configuration:
  #
  #   output HDMI-A-1 resolution 1920x1080 position 1920,0
  #
  # You can get the names of your outputs by running: swaymsg -t get_outputs

  ### Idle configuration
  #
  # Example configuration:
  #
  # exec swayidle -w \
  #          timeout 300 'swaylock -f -c 000000' \
  #          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
  #          before-sleep 'swaylock -f -c 000000'
  #
  # This will lock your screen after 300 seconds of inactivity, then turn off
  # your displays after another 300 seconds, and turn your screens back on when
  # resumed. It will also lock your screen before your computer goes to sleep.

  ### Input configuration
  #
  # Example configuration:
  #
  #   input "2:14:SynPS/2_Synaptics_TouchPad" {
  #       dwt enabled
  #       tap enabled
  #       natural_scroll enabled
  #       middle_emulation enabled
  #   }

  input * {
          natural_scroll enabled
  }


  #
  # You can get the names of your inputs by running: swaymsg -t get_inputs
  # Read `man 5 sway-input` for more information about this section.

  input * {
          xkb_layout "us,us"
          xkb_variant "colemak,,"
          xkb_options "ctrl:nocaps,grp:shift_toggle"
  }


  ### Key bindings
  #
  # Basics:
  #
      # Start a terminal
      bindsym $mod+Return exec $term

      # Kill focused window
      bindsym $mod+Shift+q kill

      # Start your launcher
      bindsym $mod+space exec --no-startup-id wofi --show=drun

      # Drag floating windows by holding down $mod and left mouse button.
      # Resize them with right mouse button + $mod.
      # Despite the name, also works for non-floating windows.
      # Change normal to inverse to use left mouse button for resizing and right
      # mouse button for dragging.
      floating_modifier $mod normal

      # Reload the configuration file
      bindsym $mod+Shift+c reload

      bindsym $mod+Shift+x grim

      # Exit sway (logs you out of your Wayland session)
      bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
  #
  # Moving around:
  #
      # Move your focus around
      bindsym $mod+$left focus left
      bindsym $mod+$down focus down
      bindsym $mod+$up focus up
      bindsym $mod+$right focus right
      # Or use $mod+[up|down|left|right]
      bindsym $mod+Left focus left
      bindsym $mod+Down focus down
      bindsym $mod+Up focus up
      bindsym $mod+Right focus right

      # Move the focused window with the same, but add Shift
      bindsym $mod+Shift+$left move left
      bindsym $mod+Shift+$down move down
      bindsym $mod+Shift+$up move up
      bindsym $mod+Shift+$right move right
      # Ditto, with arrow keys
      bindsym $mod+Shift+Left move left
      bindsym $mod+Shift+Down move down
      bindsym $mod+Shift+Up move up
      bindsym $mod+Shift+Right move right
  #
  # Workspaces:
  #
      # Switch to workspace
      bindsym $mod+1 workspace number 1
      bindsym $mod+2 workspace number 2
      bindsym $mod+3 workspace number 3
      bindsym $mod+4 workspace number 4
      bindsym $mod+5 workspace number 5
      bindsym $mod+6 workspace number 6
      bindsym $mod+7 workspace number 7
      bindsym $mod+8 workspace number 8
      bindsym $mod+9 workspace number 9
      bindsym $mod+0 workspace number 10
      # Move focused container to workspace
      bindsym $mod+Shift+1 move container to workspace number 1
      bindsym $mod+Shift+2 move container to workspace number 2
      bindsym $mod+Shift+3 move container to workspace number 3
      bindsym $mod+Shift+4 move container to workspace number 4
      bindsym $mod+Shift+5 move container to workspace number 5
      bindsym $mod+Shift+6 move container to workspace number 6
      bindsym $mod+Shift+7 move container to workspace number 7
      bindsym $mod+Shift+8 move container to workspace number 8
      bindsym $mod+Shift+9 move container to workspace number 9
      bindsym $mod+Shift+0 move container to workspace number 10
      # Note: workspaces can have any name you want, not just numbers.
      # We just use 1-10 as the default.
  #
  # Layout stuff:
  #
      # You can "split" the current object of your focus with
      # $mod+b or $mod+v, for horizontal and vertical splits
      # respectively.
      bindsym $mod+b splith
      bindsym $mod+v splitv

      # Switch the current container between different layout styles
      bindsym $mod+s layout stacking
      bindsym $mod+w layout tabbed
      bindsym $mod+e layout toggle split

      # Make the current focus fullscreen
      bindsym $mod+f fullscreen

      # Toggle the current focus between tiling and floating mode
      bindsym $mod+Shift+space floating toggle

      # Swap focus between the tiling area and the floating area
      # bindsym $mod+space focus mode_toggle

      # Move focus to the parent container
      bindsym $mod+a focus parent
  #
  # Scratchpad:
  #
      # Sway has a "scratchpad", which is a bag of holding for windows.
      # You can send windows there and get them back later.

      # Move the currently focused window to the scratchpad
      bindsym $mod+Shift+minus move scratchpad

      # Show the next scratchpad window or hide the focused scratchpad window.
      # If there are multiple scratchpad windows, this command cycles through them.
      bindsym $mod+minus scratchpad show
  #
  # Resizing containers:
  #
  mode "resize" {
      # left will shrink the containers width
      # right will grow the containers width
      # up will shrink the containers height
      # down will grow the containers height
      bindsym $left resize shrink width 10px
      bindsym $down resize grow height 10px
      bindsym $up resize shrink height 10px
      bindsym $right resize grow width 10px

      # Ditto, with arrow keys
      bindsym Left resize shrink width 10px
      bindsym Down resize grow height 10px
      bindsym Up resize shrink height 10px
      bindsym Right resize grow width 10px

      # Return to default mode
      bindsym Return mode "default"
      bindsym Escape mode "default"
  }
  bindsym $mod+r mode "resize"

  bar {
      swaybar_command waybar
  }

  #
  # Status Bar:
  #
  # Read `man 5 sway-bar` for more information about this section.
  # bar {
  #     position top

  #     font pango:SourceCodePro Medium 13

  #     # When the status_command prints a new line to stdout, swaybar updates.
  #     # The default just shows the current date and time.
  #     # The hyphen means don't pad that entry.
  #     status_command while date +'%A %-e %B %Y %k:%M'; do sleep 30; done

  #     colors {
  #         statusline #ffffff
  #         background #323232
  #         inactive_workspace #32323200 #32323200 #5c5c5c
  #     }
  # }

  gaps outer 0

  include /etc/sway/config.d/*
#+end_src

#+begin_src conf
  default_border pixel 0
#+end_src
* Wofi
** Config
:PROPERTIES:
:header-args: :tangle (if (eq system-type 'gnu/linux) "~/.config/wofi/config" "no")
:END:

#+begin_src conf
  prompt=Run
#+end_src


** CSS
:PROPERTIES:
:header-args: :tangle (if (eq system-type 'gnu/linux) "~/.config/wofi/style.css" "no")
:END:

#+begin_src css
  window {
  #margin: 5px;
  #border: 2px solid red;
  background-color: #bdc4cc;
  }

  #input {
  margin: 5px;
  border: 2px solid white;
  background-color: white;
  }

  #inner-box {
  margin: 5px;
  border: 2px solid white;
  background-color: white;
  }

  #outer-box {
  margin: 5px;
  border: 2px solid white;
  background-color: white;
  }

  #scroll {
  margin: 5px;
  border: 2px solid white;
  background-color: white;
  }

  #text {
  margin: 5px;
  color: black;
  #border: 2px solid white;
  #background-color: white;
  }

  #entry:selected {
      background-color: #bdc4cc;
      #color: red;
  }

  #text:selected {
      #background-color: blue;
  }
#+end_src

* Waybar
#+begin_src json :tangle ~/.config/waybar/config
  {
      "layer": "top",
      "height": 30,
      "modules-left": ["sway/workspaces", "sway/mode"],
      //"modules-center": ["sway/window"],
      "modules-right": ["pulseaudio", "mpd", "clock", "tray"],
      "sway/window": {
          "max-length": 50
      },
      "clock": {
          "format-alt": "{:%a, %d. %b  %H:%M}"
      },
      "pulseaudio": {
          "scroll-step": 5,
          "on-click": "pavucontrol",
          "on-scroll-up": "pactl set-sink-volume @DEFAULT_SINK@ -5%",
          "on-scroll-down": "pactl set-sink-volume @DEFAULT_SINK@ +5%"
      }
  }
#+end_src

#+begin_src css :tangle ~/.config/waybar/style.css
  ,* {
      border: none;
      border-radius: 0;
      /* `otf-font-awesome` is required to be installed for icons */
      font-family: Roboto, Helvetica, Arial, sans-serif;
      font-size: 13px;
      min-height: 0;
  }

  window#waybar {
      background-color: rgba(43, 48, 59, 0.5);
      border-bottom: 3px solid rgba(100, 114, 125, 0.5);
      color: #ffffff;
      transition-property: background-color;
      transition-duration: .5s;
  }

  window#waybar.hidden {
      opacity: 0.2;
  }

  /*
  window#waybar.empty {
      background-color: transparent;
  }
  window#waybar.solo {
      background-color: #FFFFFF;
  }
  ,*/

  window#waybar.termite {
      background-color: #3F3F3F;
  }

  window#waybar.chromium {
      background-color: #000000;
      border: none;
  }

  #workspaces button {
      padding: 0 5px;
      background-color: transparent;
      color: #ffffff;
      /* Use box-shadow instead of border so the text isn't offset */
      box-shadow: inset 0 -3px transparent;
  }

  /* https://github.com/Alexays/Waybar/wiki/FAQ#the-workspace-buttons-have-a-strange-hover-effect */
  #workspaces button:hover {
      background: rgba(0, 0, 0, 0.2);
      box-shadow: inset 0 -3px #ffffff;
  }

  #workspaces button.focused {
      background-color: #64727D;
      box-shadow: inset 0 -3px #ffffff;
  }

  #workspaces button.urgent {
      background-color: #eb4d4b;
  }

  #mode {
      background-color: #64727D;
      border-bottom: 3px solid #ffffff;
  }

  #clock,
  #battery,
  #cpu,
  #memory,
  #disk,
  #temperature,
  #backlight,
  #network,
  #pulseaudio,
  #custom-media,
  #tray,
  #mode,
  #idle_inhibitor,
  #mpd {
      padding: 0 10px;
      margin: 0 4px;
      color: #ffffff;
  }

  #window,
  #workspaces {
      margin: 0 4px;
  }

  /* If workspaces is the leftmost module, omit left margin */
  .modules-left > widget:first-child > #workspaces {
      margin-left: 0;
  }

  /* If workspaces is the rightmost module, omit right margin */
  .modules-right > widget:last-child > #workspaces {
      margin-right: 0;
  }

  #clock {
      background-color: #64727D;
  }

  #battery {
      background-color: #ffffff;
      color: #000000;
  }

  #battery.charging, #battery.plugged {
      color: #ffffff;
      background-color: #26A65B;
  }

  @keyframes blink {
      to {
          background-color: #ffffff;
          color: #000000;
      }
  }

  #battery.critical:not(.charging) {
      background-color: #f53c3c;
      color: #ffffff;
      animation-name: blink;
      animation-duration: 0.5s;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
      animation-direction: alternate;
  }

  label:focus {
      background-color: #000000;
  }

  #cpu {
      background-color: #2ecc71;
      color: #000000;
  }

  #memory {
      background-color: #9b59b6;
  }

  #disk {
      background-color: #964B00;
  }

  #backlight {
      background-color: #90b1b1;
  }

  #network {
      background-color: #2980b9;
  }

  #network.disconnected {
      background-color: #f53c3c;
  }

  #pulseaudio {
      background-color: #f1c40f;
      color: #000000;
  }

  #pulseaudio.muted {
      background-color: #90b1b1;
      color: #2a5c45;
  }

  #custom-media {
      background-color: #66cc99;
      color: #2a5c45;
      min-width: 100px;
  }

  #custom-media.custom-spotify {
      background-color: #66cc99;
  }

  #custom-media.custom-vlc {
      background-color: #ffa000;
  }

  #temperature {
      background-color: #f0932b;
  }

  #temperature.critical {
      background-color: #eb4d4b;
  }

  #tray {
      background-color: #2980b9;
  }

  #idle_inhibitor {
      background-color: #2d3436;
  }

  #idle_inhibitor.activated {
      background-color: #ecf0f1;
      color: #2d3436;
  }

  #mpd {
      background-color: #66cc99;
      color: #2a5c45;
  }

  #mpd.disconnected {
      background-color: #f53c3c;
  }

  #mpd.stopped {
      background-color: #90b1b1;
  }

  #mpd.paused {
      background-color: #51a37a;
  }

  #language {
      background: #00b093;
      color: #740864;
      padding: 0 5px;
      margin: 0 5px;
      min-width: 16px;
  }

#+end_src
* Game Mode
:PROPERTIES:
:header-args: :tangle ~/.config/gamemode.ini
:END:

#+begin_src conf
  [general]
  reaper_freq=15
  desiredgov=performance
  softrealtime=auto
  renice=10
  ioprio=0
  inhibit_screensaver=1
#+end_src

* Linux TKG
#+begin_src conf :tangle ~/.config/frogminer/linux-tkg.cfg
  _distro="Arch"
  _EXT_CONFIG_PATH=~/.config/frogminer/linux-tkg.cfg
  _NUKR="true"
  CUSTOM_GCC_PATH=""
  CUSTOM_LLVM_PATH=""

  # Set to the number corresponding to a predefined profile to use it. Current list of available profiles :
  # 1 - Custom (meaning nothing will be enforced and you get to configure everything)
  # 2 - Ryzen desktop (performance)
  # 3 - Generic Desktop (Performance)
  _OPTIPROFILE=""
  _force_all_threads="true"
  # Set to true to prevent ccache from being used and set CONFIG_GCC_PLUGINS=y (which needs to be disabled for ccache to work properly)
  _noccache="false"

  # Set to true to use modprobed db to clean config from unneeded modules. Speeds up compilation considerably. Requires root - https://wiki.archlinux.org/index.php/Modprobed-db
  # !!!! Make sure to have a well populated db !!!! - Leave empty to be asked about it at build time
  _modprobeddb="false"

  # modprobed-db database file location
  _modprobeddb_db_path=~/.config/modprobed.db

  # Set to "1" to call make menuconfig, "2" to call make nconfig, "3" to call make xconfig, before building the kernel. Set to false to disable and skip the prompt.
  _menunconfig="false"

  # Set to true to generate a kernel config fragment from your changes in menuconfig/nconfig. Set to false to disable and skip the prompt.
  _diffconfig="false"

  # Set to the file name where the generated config fragment should be written to. Only used if _diffconfig is active.
  _diffconfig_name=""

  #### KERNEL OPTIONS ####

  # Name of the default config file to use for the kernel
  # Default (empty):
  # - Archlinux (PKGBUILD): "config.x86_64" from the linux-tkg-config/5.y folder.
  # - install.sh: Picks the .config file from the currently running kernel.
  #               It is recommended to be running an official kernel before running this script, to pick off a correct .config file
  # User provided:
  # - Archlinux : use "config_hardened.x86_64" to get a hardened kernel. To get a complete hardened setup, you have to use "cfs" as _cpusched.
  # - Any : custom user provided file, the given path should be relative to the PKGBUILD file. This enables for example to use a user stripped down .config file.
  #         If the .config file isn't up to date with the chosen kernel version, any extra CONFIG_XXXX is set to its default value.
  # Note: the script copies the resulting .config file as "kernelconfig.new" next to the PKGBUILD as a convenience for an eventual re-use. It gets overwritten at each run.
  #       One can use "kernelconfig.new" here to always use the latest edited .config file. modprobed-db needs to be used only once for its changes to be picked up.
  _configfile=""

  # Disable some non-module debugging - See PKGBUILD for the list
  _debugdisable="false"

  # LEAVE AN EMPTY VALUE TO BE PROMPTED ABOUT FOLLOWING OPTIONS AT BUILD TIME

  # CPU scheduler - Options are "upds" (TkG's Undead PDS), "pds", "bmq", "muqss" or "cfs"
  # "upds" is the recommended option for gaming
  #_cpusched="pds"

  # Compiler to use - Options are "gcc" or "llvm".
  # For advanced users.
  _compiler="gcc"

  # CPU sched_yield_type - Choose what sort of yield sched_yield will perform
  # For PDS and MuQSS: 0: No yield. (Recommended option for gaming on PDS and MuQSS)
  #                    1: Yield only to better priority/deadline tasks. (Default - can be unstable with PDS on some platforms)
  #                    2: Expire timeslice and recalculate deadline. (Usually the slowest option for PDS and MuQSS, not recommended)
  # For BMQ:           0: No yield.
  #                    1: Deboost and requeue task. (Default)
  #                    2: Set rq skip task.
  _sched_yield_type="0"

  # Round Robin interval is the longest duration two tasks with the same nice level will be delayed for. When CPU time is requested by a task, it receives a time slice equal
  # to the rr_interval in addition to a virtual deadline. When using yield_type 2, a low value can help offset the disadvantages of rescheduling a process that has yielded.
  # MuQSS default: 6ms"
  # PDS default: 4ms"
  # BMQ default: 2ms"
  # Set to "1" for 2ms, "2" for 4ms, "3" for 6ms, "4" for 8ms, or "default" to keep the chosen scheduler defaults.
  _rr_interval="default"

  # Set to "true" to disable FUNCTION_TRACER/GRAPH_TRACER, lowering overhead but limiting debugging and analyzing of kernel functions - Kernel default is "false"
  _ftracedisable="true"

  # Set to "true" to disable NUMA, lowering overhead, but breaking CUDA/NvEnc on Nvidia equipped systems - Kernel default is "false"
  _numadisable="true"

  # Set to "true" to enable misc additions - May contain temporary fixes pending upstream or changes that can break on non-Arch - Kernel default is "true"
  _misc_adds="true"

  # Set to "1" to use CattaRappa mode (enabling full tickless), "2" for tickless idle only, or "0" for periodic ticks.
  # Full tickless can give higher performances in various cases but, depending on hardware, lower consistency. Just tickless idle can perform better on some platforms (mostly AMD based).
  _tickless="2"

  # Setting this to to "true" can improve latency on PDS (at the cost of throughput) and improve throughput on other schedulers (at the cost of latency) - Can improve VMs performance - Kernel default is "false"
  _voluntary_preempt="true"

  # Set to "true" to enable Device Tree and Open Firmware support. If you don't know about it, you don't need it - Default is "false"
  _OFenable="false"

  # Set to "true" to use ACS override patch - https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF#Bypassing_the_IOMMU_groups_.28ACS_override_patch.29 - Kernel default is "false"
  _acs_override=""

  # Set to "true" to add Bcache filesystem support. You'll have to install bcachefs-tools-git from AUR for utilities - https://bcachefs.org/ - If in doubt, set to "false"
  _bcachefs="false"

  # Set to "true" to add back missing symbol for AES-NI/AVX support on ZFS - https://github.com/NixOS/nixpkgs/blob/master/pkgs/os-specific/linux/kernel/export_kernel_fpu_functions.patch - Kernel default is "false"
  _zfsfix="false"

  # Set to "true" to enable support for fsync, an experimental replacement for esync found in Valve Proton 4.11+ - https://steamcommunity.com/games/221410/announcements/detail/2957094910196249305
  _fsync="true"

  # Set to "true" to enable support for futex2, an experimental interface that can be used by proton-tkg and proton 5.13 experimental through Fsync - Can be enabled alongside fsync to use it as a fallback
  # https://gitlab.collabora.com/tonyk/linux/-/tree/futex2-dev
  _futex2="true"

  # Set to "true" to enable support for winesync, an experimental replacement for esync - requires patched wine - https://repo.or.cz/linux/zf.git/shortlog/refs/heads/winesync
  _winesync="false"

  # Set to "true" to enable the Binder and Ashmem, the kernel modules required to use the android emulator Anbox.
  _anbox="false"

  # A selection of patches from Zen/Liquorix kernel and additional tweaks for a better gaming experience (ZENIFY) - Default is "true"
  _zenify="true"

  # compiler optimization level - 1. Optimize for performance (-O2); 2. Optimize harder (-O3); 3. Optimize for size (-Os) - Kernel default is "1"
  _compileroptlevel="1"

  # CPU compiler optimizations - Defaults to prompt at kernel config if left empty
  # AMD CPUs : "k8" "k8sse3" "k10" "barcelona" "bobcat" "jaguar" "bulldozer" "piledriver" "steamroller" "excavator" "zen" "zen2" "zen3" (zen3 opt support depends on GCC11)
  # Intel CPUs : "mpsc"(P4 & older Netburst based Xeon) "atom" "core2" "nehalem" "westmere" "silvermont" "sandybridge" "ivybridge" "haswell" "broadwell" "skylake" "skylakex" "cannonlake" "icelake" "goldmont" "goldmontplus" "cascadelake" "cooperlake" "tigerlake"
  # Other options :
  # - "native_amd" (use compiler autodetection - Selecting your arch manually in the list above is recommended instead of this option)
  # - "native_intel" (use compiler autodetection and will prompt for P6_NOPS - Selecting your arch manually in the list above is recommended instead of this option)
  # - "generic" (kernel's default - to share the package between machines with different CPU µarch as long as they are x86-64)
  #
  # https://en.wikipedia.org/wiki/X86-64#Microarchitecture_Levels)
  # - "generic_v2" (depends on GCC11 - to share the package between machines with different CPU µarch supporting at least x86-64-v2
  # - "generic_v3" (depends on GCC11 - to share the package between machines with different CPU µarch supporting at least x86-64-v3
  # - "generic_v4" (depends on GCC11 - to share the package between machines with different CPU µarch supporting at least x86-64-v4
  _processor_opt="zen2"

  # MuQSS only - Make IRQ threading compulsory (FORCE_IRQ_THREADING) - Default is "false"
  _irq_threading="false"

  # MuQSS and PDS only - SMT (Hyperthreading) aware nice priority and policy support (SMT_NICE) - Kernel default is "true" - You can disable this on non-SMT/HT CPUs for lower overhead
  _smt_nice=""

  # Trust the CPU manufacturer to initialize Linux's CRNG (RANDOM_TRUST_CPU) - Kernel default is "false"
  _random_trust_cpu="false"

  # MuQSS only - CPU scheduler runqueue sharing - No sharing (RQ_NONE), SMT (hyperthread) siblings (RQ_SMT), Multicore siblings (RQ_MC), Symmetric Multi-Processing (RQ_SMP), NUMA (RQ_ALL)
  # Valid values are "none", "smt", "mc", "mc-llc"(for zen), "smp", "all" - Kernel default is "smt"
  _runqueue_sharing=""

  # Timer frequency - "100" "500", "750" or "1000" - More options available in kernel config prompt when left empty depending on selected cpusched - Kernel default is "500" - For MuQSS, 100Hz is recommended
  _timer_freq=""

  # Default CPU governor - "performance", "ondemand", "schedutil" or leave empty for default (schedutil)
  _default_cpu_gov="ondemand"

  # Use an aggressive ondemand governor instead of default ondemand to improve performance on low loads/high core count CPUs while keeping some power efficiency from frequency scaling.
  # It still requires you to either set ondemand as default governor or to select it some way.
  _aggressive_ondemand="true"

  # On some platforms, an acpi_cpufreq bug affects performance negatively. Set to "true" to disable it as a workaround, but it will use more power.
  # https://github.com/Tk-Glitch/PKGBUILDS/issues/263
  _disable_acpi_cpufreq=""

  # You can pass a default set of kernel command line options here - example: "intel_pstate=passive nowatchdog amdgpu.ppfeaturemask=0xfffd7fff mitigations=off"
  _custom_commandline="intel_pstate=passive"


  #### SPESHUL OPTION ####

  # If you want to bypass the stock naming scheme and enforce something else (example : "linux") - Useful for some bootloaders requiring manual entry editing on each release.
  # !!! It will also change pkgname - If you don't explicitely need this, don't use it !!!
  _custom_pkgbase=""

  # [non-Arch specific] Kernel localversion. Putting it to "Mario" will make for example the kernel version be 5.7.0-tkg-Mario (given by uname -r)
  # If left empty, it will use -tkg-"${_cpusched}" where "${_cpusched}" will be replaced by the user chosen scheduler
  _kernel_localversion=""

  #### USER PATCHES ####

  # community patches - add patches (separated by a space) of your choice by name from the community-patches dir
  # example: _community_patches="clear_nack_in_tend_isr.myrevert ffb_regression_fix.mypatch 0008-drm-amd-powerplay-force-the-trim-of-the-mclk-dpm-levels-if-OD-is-enabled.mypatch"
  _community_patches=""

  # You can use your own patches by putting them in a subfolder called linux<version>-tkg-userpatches (e.g. linux510-tkg-userpatches) next to the PKGBUILD and giving them the .mypatch extension.
  # You can also revert patches by putting them in that same folder and giving them the .myrevert extension.

  # Also, userpatches variable below must be set to true for the above to work.
  _user_patches="true"

  # Apply all user patches without confirmation - !!! NOT RECOMMENDED !!!
  _user_patches_no_confirm="false"


  #### CONFIG FRAGMENTS ####

  # You can use your own kernel config fragments by putting them in the same folder as the PKGBUILD and giving them the .myfrag extension.

  # Also, the config fragments variable below must be set to true for the above to work.
  _config_fragments="true"

  # Apply all config fragments without confirmation - !!! NOT RECOMMENDED !!!
  _config_fragments_no_confirm="false"
#+end_src

* Journald
By default, journald can use up to 4 GB of storage for logs or something like that.

#+begin_src conf :tangle /sudo::/etc/systemd/system.conf.d/journald.conf
  SystemMaxUse=100M
#+end_src

And to check how much space the journal is currently using:

#+begin_src shell :results replace :tangle no
  journalctl --disk-usage
#+end_src

#+results:
: Archived and active journals take up 72.0M in the file system.

* Font Config
#+begin_src xml :tangle ~/.config/fontconfig/fonts.conf :comments no
  <?xml version="1.0" encoding="UTF-8"?>
  <!DOCTYPE fontconfig SYSTEM "urn:fontconfig:fonts.dtd">
  <fontconfig>
    <match target="font">
      <edit name="hintstyle" mode="assign">
        <const>hintfull</const>
      </edit>
    </match>
    <match target="font">
      <edit name="rgba" mode="assign">
        <const>rgb</const>
      </edit>
    </match>
    <match target="font">
      <edit name="lcdfilter" mode="assign">
        <const>lcddefault</const>
      </edit>
    </match>
  </fontconfig>
#+end_src

* VConsole caps-control remap
:LOGBOOK:
- Refiled on [2021-05-28 Fri 11:26]
- Refiled on [2021-05-06 Thu 10:50]
:END:

#+begin_src text :tangle (if (eq system-type 'gnu/linux) "/usr/local/share/kbd/keymaps/colemak-no-caps.map" "no") :comments no :mkdirp yes
  # colemak.kmap for Linux console.
  # 2006-01-01 Shai Coleman, http://colemak.com/ . Public domain.
  alt_is_meta
  charset "iso-8859-15"  # use a ISO-8859-15 font, e.g.: consolechars -f lat9v-14
  keymaps 0-12
  include "qwerty-layout"
  include "linux-with-alt-and-altgr"
  strings as usual

  keycode  41 =          grave    asciitilde       dead_tilde        asciitilde    nul
  keycode   2 =            one        exclam       exclamdown       onesuperior
  keycode   3 =            two            at        masculine       twosuperior    nul
  keycode   4 =          three    numbersign      ordfeminine     threesuperior    Escape
  keycode   5 =           four        dollar             cent          sterling    Control_backslash
  keycode   6 =           five       percent             euro               yen    Control_bracketright               #          EuroSign               yen
  keycode   7 =            six   asciicircum       asciitilde        asciitilde	 Control_asciicircum               #           hstroke           Hstroke
  keycode   8 =          seven     ampersand              eth               ETH    Control_underscore
  keycode   9 =          eight      asterisk            thorn             THORN    Delete
  keycode  10 =           nine     parenleft       asciitilde        asciitilde               #   leftsinglequotemark   leftdoublequotemark
  keycode  11 =           zero    parenright       asciitilde        asciitilde               #  rightsinglequotemark   rightdoublequotemark
  keycode  12 =          minus    underscore       asciitilde        asciitilde	 Control_underscore          #            endash            emdash
  keycode  13 =          equal          plus         multiply          division

  keycode  16 =              q             Q       adiaeresis        Adiaeresis    Control_q
  keycode  17 =              w             W            aring             Aring    Control_w
  keycode  18 =              f             F           atilde            Atilde    Control_f
  keycode  19 =              p             P           oslash          Ooblique    Control_p
  keycode  20 =              g             G       asciitilde        asciitilde    Control_g	#       dead_ogonek        asciitilde
  keycode  21 =              j             J       asciitilde        asciitilde    Control_j	#           dstroke           Dstroke
  keycode  22 =              l             L       asciitilde        asciitilde    Control_l	#           lstroke           Lstroke
  keycode  23 =              u             U           uacute            Uacute    Control_u
  keycode  24 =              y             Y       udiaeresis        Udiaeresis    Control_y
  keycode  25 =      semicolon         colon       odiaeresis        Odiaeresis
  keycode  26 =    bracketleft     braceleft    guillemotleft        asciitilde    Escape               #     guillemotleft         0x1002039
  keycode  27 =   bracketright    braceright   guillemotright        asciitilde    Control_bracketright #    guillemotright         0x100203a
  keycode  43 =      backslash           bar       asciitilde        asciitilde    Control_backslash

  keycode  30 =              a             A           aacute            Aacute    Control_a
  keycode  31 =              r             R       dead_grave        asciitilde    Control_r
  keycode  32 =              s             S           ssharp        asciitilde    Control_s
  keycode  33 =              t             T       dead_acute        asciitilde    Control_t	#        dead_acute  dead_doubleacute
  keycode  34 =              d             D   dead_diaeresis        asciitilde    Control_d
  keycode  35 =              h             H       asciitilde        asciitilde    Control_h	#        dead_caron        asciitilde
  keycode  36 =              n             N           ntilde            Ntilde    Control_n
  keycode  37 =              e             E           eacute            Eacute    Control_e
  keycode  38 =              i             I           iacute            Iacute    Control_i
  keycode  39 =              o             O           oacute            Oacute    Control_o
  keycode  40 =     apostrophe      quotedbl           otilde            Otilde

  keycode  44 =              z             Z               ae                AE    Control_z
  keycode  45 =              x             X  dead_circumflex        asciitilde    Control_x
  keycode  46 =              c             C         ccedilla          Ccedilla    Control_c
  keycode  47 =              v             V               oe                OE    Control_v
  keycode  48 =              b             B       asciitilde        asciitilde    Control_b	#        dead_breve        asciitilde
  keycode  49 =              k             K       asciitilde        asciitilde    Control_k      #    dead_abovering        asciitilde
  keycode  50 =              m             M       asciitilde        asciitilde    Control_m	#       dead_macron        asciitilde
  keycode  51 =          comma          less     dead_cedilla        asciitilde
  keycode  52 =         period       greater       asciitilde        asciitilde			#     dead_abovedot        asciitilde
  keycode  53 =          slash      question     questiondown        asciitilde    Delete

  keycode  58 =        Control # Formerly Caps-lock
  keycode  86 =          minus    underscore       asciitilde        asciitilde	 Control_underscore          #            endash            emdash
  keycode  57 =          space         space            space      nobreakspace    nul


  keycode   1 = Escape
  keycode  14 = Delete
  keycode  15 = Tab
  keycode  28 = Return
          alt     keycode  28 = Meta_Control_m
  keycode  29 = Control
  keycode  42 = Shift
  keycode  54 = Shift
  keycode  56 = Alt
  keycode  97 = Control
#+end_src


#+begin_src text :tangle (if (eq system-type 'gnu/linux) "/etc/vconsole.conf" "no") :comments no
  KEYMAP=/usr/local/share/kbd/keymaps/colemak-no-caps.map
#+end_src

[[https://man.archlinux.org/man/keymaps.5][Keymaps]]
[[https://man.archlinux.org/man/vconsole.conf.5][VConsole]]
[[https://wiki.archlinux.org/index.php/Linux_console/Keyboard_configuration#Loadkeys][Loadkeys]]
[[https://askubuntu.com/questions/982863/change-caps-lock-to-control-in-virtual-console-on-ubuntu-17][Change caps lock to control in virtual console on ubuntu 17]]
