#+title: Hammerspoon
#+index: Hammerspoon
#+index: MacOS!Hammerspoon

* Hammerspoon
** Setup
#+begin_src shell
  defaults write org.hammerspoon.Hammerspoon MJConfigFile "~/.config/hammerspoon/init.lua"
#+end_src

** Init
:PROPERTIES:
:header-args: :tangle ~/.config/hammerspoon/init.lua
:END:
*** Hyper

#+begin_src lua
  local hyper = {"ctrl", "alt", "cmd"}
#+end_src

*** WM
#+begin_src lua
    hs.loadSpoon("MiroWindowsManager")

    hs.window.animationDuration = 0.0
    spoon.MiroWindowsManager:bindHotkeys({
          up         = {hyper, ";" },
          right      = {hyper, "'" },
          down       = {hyper, "o" },
          left       = {hyper, "i" },
          fullscreen = {hyper, "/" }
    })

  hs.hotkey.bind(hyper, '.', function()
          local win = hs.window.focusedWindow()
          local f = win:frame()
          local max = win:screen():frame()

          local x = f

          x.x = ((max.w - f.w) / 2) + max.x
          x.y = ((max.h - f.h) / 2) + max.y
          win:setFrame(x)
  end)
#+end_src

*** Finder
#+begin_src lua
  hs.hotkey.bind(hyper, 'n', function()
                    hs.application.launchOrFocus("Finder")
  end)
#+end_src

*** Reload Hammerspoon
#+begin_src lua
  hs.hotkey.bind(hyper, 'r', function()
                    hs.reload()
  end)
#+end_src

*** Text Inflator

#+begin_src lua
  local function textInflaterCallback(choice)
     --hs.alert(choice["text"])
     --hs.pasteboard.setContents(choice["text"])
     hs.eventtap.keyStrokes(choice["text"])
  end

  local inflates = {
     {
        ["text"] = "Principles of Anatomy and Physiology 14th Ed. Chapter 28",
        ["subText"] = "citation",
        ["uuid"] = "0001"
     },
     {
        ["text"] = "Select all that apply.",
        ["subText"] = "multiple choice",
        ["uuid"] = "0002"
     },
     {
        ["text"] = "(no description)",
        ["subText"] = "image occlusion",
        ["uuid"] = "0003"
     },
     {
        ["text"] = "Î¼",
        ["subText"] = "Greek mu (micro)",
        ["uuid"] = "0005"
     }
  }

  local function textInflater(choice)
     --hs.alert(choice["text"])
     --hs.pasteboard.setContents(choice["text"])
     hs.eventtap.keyStrokes(choice["text"])
  end

  local textInflaterChooser =
     hs.chooser.new(
        function(choice)
           if not (choice) then
              return
           else
              textInflaterCallback(choice)
           end
        end
     ):rows(5):width(50):choices(inflates):searchSubText(true)

  hs.hotkey.bind(
     hyper,
     "J",
     function()
        textInflaterChooser:show()
     end)
#+end_src
